# SConstruct file to build Haskell packages for Main Module
# #########################################################

# set environment
#################
from os.path import expanduser
import os
home = expanduser("~")
env = Environment() 
env["ENV"]["PATH"] = os.environ.get("PATH")
env["ENV"]["HOME"] = os.environ.get("HOME")

# Gather main dependencies
##########################

dependsOn = [
          Glob("HGamer3D/Internal/*"),
          Glob("HGamer3D/Internal/ECS/*"),
          Glob("HGamer3D/Audio/*"),
          Glob("HGamer3D/Audio/Internal/*"),
          Glob("HGamer3D/InputSystem/*"),
          Glob("HGamer3D/InputSystem/Internal/*"),
          Glob("HGamer3D/Network/*"),
          Glob("HGamer3D/Network/Internal/*"),
          Glob("HGamer3D/Engine/*"),
          Glob("HGamer3D/Engine/Internal/*"),
          Glob("HGamer3D/Engine/Schema/*"),
	  Glob("HGamer3D/GUI/*"),
	  Glob("HGamer3D/Graphics3D/*"),
	  Glob("*.cabal"),
	  "LICENSE",

	  Glob("../Data/dist/HGamer3D-*.tar.gz"),
	  Glob("../GUI/dist/HGamer3D-*.tar.gz"),
	  Glob("../WinEvent/dist/HGamer3D-*.tar.gz"),
	  Glob("../Graphics3D/dist/HGamer3D-*.tar.gz"),
	  Glob("../Audio/dist/HGamer3D-*.tar.gz"),
	  Glob("../Network/dist/HGamer3D-*.tar.gz"),
	  Glob("../InputSystem/dist/HGamer3D-*.tar.gz"),
	  Glob("../Schema/dist/HGamer3D-*.tar.gz"),
	  Glob("../Wire/dist/HGamer3D-*.tar.gz"),
]

target = [ "dist/setup-config", Glob("dist/HGamer3D-*.tar.gz")]

env.Command(target, dependsOn, [
"cabal configure --user",
"cabal build",
"cabal haddock",
"cabal install --user --extra-lib-dirs=" + home + "/.HGamer3D/lib",
"cabal sdist"
])
