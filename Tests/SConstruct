# SConstruct files, to build the tests
# ####################################

# set environment
#################
from os.path import expanduser
import os
home = expanduser("~")
env = Environment() 
env["ENV"]["PATH"] = os.environ.get("PATH")
env["ENV"]["HOME"] = os.environ.get("HOME")

# the output directory
env.Command("build", "", Mkdir("build"))

def buildCmd(p, s):
    return "rm -f build/*.o && " + "ghc --make -O2 -threaded -rtsopts -odir build -hidir build -i" + p + " -o build/" + s + " " + p + "/" + s

for (p, s) in [

#    ("base-tests", "Audio"),
    ("base-tests", "BlueCube"),
    ("base-tests", "BumpMappingCube"),
    ("base-tests", "GUI-Widgets"),
    ("base-tests", "Joystick"),
    ("base-tests", "Keyboard"),
    ("base-tests", "Mouse"),
    ("base-tests", "Network-Chat"),
    ("base-tests", "WinEvent"),

]:
   if env["PLATFORM"] == "win32":
      target = "build/" + s + ".exe"
   else:
      target = "build/" + s
	
   env.Command(target, [ p + "/" + s + ".hs", 
                                     	Glob("../Data/dist/HGamer3D-*.tar.gz"),
					Glob("../Common/dist/HGamer3D-*.tar.gz"),
	  				Glob("../Audio/dist/HGamer3D-*.tar.gz"),
	  				Glob("../Network/dist/HGamer3D-*.tar.gz"),
	  				Glob("../InputSystem/dist/HGamer3D-*.tar.gz"),
	  				Glob("../Graphics3D/dist/HGamer3D-*.tar.gz"),
	  				Glob("../Main/dist/HGamer3D-*.tar.gz")
                               		  ] , buildCmd(p,s) )




