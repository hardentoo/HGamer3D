# download, and build SDL2 from source

# set environment
#################
from os.path import expanduser, exists
import os, sys
home = expanduser("~")
env = Environment() 
env["ENV"]["PATH"] = os.environ.get("PATH")
env["ENV"]["HOME"] = os.environ.get("HOME")


libpath = home + "/.HGamer3D/lib"
Alias('install', libpath)

# ON LINUX - DOWNLOAD AND COMPILE
#################################
if env["PLATFORM"] == "posix":

   # download source and extract
   if (not exists("SDL2-2.0.1.tar.gz")):
      env.Command("SDL2-2.0.1.tar.gz", "", "wget -O SDL2-2.0.1.tar.gz http://www.libsdl.org/release/SDL2-2.0.1.tar.gz")
   extractCmd = env.Command("SDL2-2.0.1/include", "SDL2-2.0.1.tar.gz", "tar xzf SDL2-2.0.1.tar.gz")
   AddPostAction(extractCmd, "patch SDL2-2.0.1/src/video/x11/SDL_x11window.c sdl2_x11_windowinput.patch -N -r-")

   # link include folder
   env.Command("include", "SDL2-2.0.1/include", "ln -s SDL2-2.0.1/include include")

   env.Command("lib/libSDL2-2.0.so.1.0.1", "include", "cd lib && cmake -G \"Unix Makefiles\" ../SDL2-2.0.1 && make")
   installCmd = env.Install(home + "/.HGamer3D/lib", "lib/libSDL2-2.0.so.1.0.1")
   AddPostAction(installCmd, [
   			     "ldconfig -n " + home + "/.HGamer3D/lib",
			     "cd " + home + "/.HGamer3D/lib && ln -s libSDL2-2.0.so.1.0.1 libSDL2-2.0.so"
			     ])

# ON WINDOWS - DOWNLOAD LIB AND INSTALL
#######################################

else:
   # download source and extract
   if (not exists("SDL2-devel-2.0.1-VC.zip")):
      env.Command("SDL2-devel-2.0.1-VC.zip", "", "wget -O SDL2-devel-2.0.1-VC.zipo http://www.libsdl.org/release/SDL2-devel-2.0.1-VC.zip")
   extractCmd = env.Command("SDL2-2.0.1/include", "SDL2-devel-2.0.1-VC.zip", "unzip SDL2-devel-2.0.1-VC")

   # link include and lib
   env.Command("include", "SDL2-2.0.1/include", "ln -s SDL2-2.0.1/include include")
   env.Command("lib", "SDL2-2.0.1/include", "cp -r SDL2-2.0.1/lib/x86/* lib")

   # install, copy dll's
   installCmd = env.Install(home + "/.HGamer3D/lib", Glob("lib/*.dll"))



