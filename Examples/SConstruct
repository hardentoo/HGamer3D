# configure, build, install the examples

# set environment
#################
from os.path import expanduser
import os
home = expanduser("~")
env = Environment() 
env["ENV"]["PATH"] = os.environ.get("PATH")
env["ENV"]["HOME"] = os.environ.get("HOME")

# the output directory
env.Command("build", "", Mkdir("build"))


for (p, s) in [

    # the base-tests examples

#    ("base-tests", "Audio"),
    ("base-tests", "BlueCube"),
    ("base-tests", "BumpMappingCube"),
    ("base-tests", "GUI-Widgets"),
    ("base-tests", "Joystick"),
    ("base-tests", "Keyboard"),
    ("base-tests", "Mouse"),
    ("base-tests", "Network-Chat"),
    ("base-tests", "WinEvent"),

    # the main examples

    ("source", "RotatePlaton"),
    ("source", "Coordinates"),
    ("source", "MaterialManager"),
    ("source", "Materials"),
    ("source", "GUI-Switch"),
    ("source", "Audio"),
    ("source", "Live1")

]:

    if env["PLATFORM"] == "win32":

       env.Command("build/" + s + ".exe", [p + "/" + s + ".hs",
                               "build/.HGamer3D"
                               ] , "rm -f build/*.o && " + "ghc --make -O2 -threaded -odir build -hidir build -i" + p + " -o build/" + s + " " + p + "/" + s)
    else:

       env.Command("build/" + s, [p + "/" + s + ".hs",
                               "build/.HGamer3D"
                               ] , "rm -f build/*.o && " + "ghc --make -O2 -threaded -odir build -hidir build -i" + p + " -o build/" + s + " " + p + "/" + s)

# download and extract Assetpack
if (not os.path.exists("Assetpack")):
      env.Command("Assetpack", "", [
         "wget -O assetpack.tar.gz http://www.hgamer3D.org/downloads/assetpack.tar.gz || (rm -f assetpack.tar.gz && exit 1)",
         "tar -xzf assetpack.tar.gz"
	 ])


# the media files need to be copied to .HGamer3D
buildRT = env.Command("build/.HGamer3D", ["Assetpack", "RTConfig"], [
			       Mkdir("build/.HGamer3D"),
			       "cp -r RTConfig/* build/.HGamer3D",
			       "cp -r Assetpack/* build/.HGamer3D/media"
			       ])

# copy runtime

def copyRT(target, source, env):
    # get target path
    if env["PLATFORM"] == "win32":
       targetPath = os.getenv("APPDATA").replace("\\","/") + "/HGamer3D"
       os.mkdir(targetPath + "/lib")
       os.system("cp ~/.HGamer3D/lib/* " + targetPath + "/lib")
       os.system("cp -r build/.HGamer3D/* " + targetPath)
    else:
       targetPath = "~\.HGamer3D"
       os.system("cp -r build/.HGamer3D/* " + targetPath)
    
env.AddPostAction(buildRT, copyRT)
